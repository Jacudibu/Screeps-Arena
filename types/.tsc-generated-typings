// declare module "/game" {
    export function findPath(fromPos: any, toPos: any, opts?: {}): any;
export function findPath(fromPos: any, toPos: any, opts?: {}): any;
export function getDirection(dx: any, dy: any): any;
export function getDirection(dx: any, dy: any): any;
export function getDistance(a: any, b: any): number;
export function getDistance(a: any, b: any): number;
export function getHeapStatistics(): any;
export function getHeapStatistics(): any;
export function getObjectById(id: any): any;
export function getObjectById(id: any): any;
export function getObjects(): any;
export function getObjects(): any;
export function getObjectsByPrototype(prototype: any): any;
export function getObjectsByPrototype(prototype: any): any;
export function getTime(): any;
export function getTime(): any;
export function searchPath(origin: any, goal: any, options: any): any;
export function searchPath(origin: any, goal: any, options: any): any;
export const ATTACK: any;
export const ATTACK_POWER: 30;
export const BODYPART_HITS: 100;
export const BOTTOM: 5;
export const BOTTOM_LEFT: 6;
export const BOTTOM_RIGHT: 4;
declare const BodyPart_base: typeof import("./game").RoomObject;
export class BodyPart extends BodyPart_base {
    get type(): any;
    get ticksToDecay(): number;
}
export const CARRY: any;
export const CARRY_CAPACITY: 50;
export class CostMatrix {
    static deserialize(data: any): any;
    _bits: Uint8Array;
    set(xx: any, yy: any, val: any): void;
    get(xx: any, yy: any): number;
    clone(): import("./game").CostMatrix;
    serialize(): any;
}
declare const Creep_base: typeof import("./game").RoomObject;
export interface Creep extends Creep_base {
    get hits(): any;
    get hitsMax(): any;
    get my(): boolean;
    get body(): any;
    move(direction: any): any;
    moveTo(x: any, y: any, opts: any): any;
    rangedAttack(target: any): any;
    rangedMassAttack(): any;
    attack(target: any): any;
    heal(target: any): any;
    rangedHeal(target: any): any;
    pull(target: any): any;
}
export const ERR_BUSY: -4;
export const ERR_FULL: -8;
export const ERR_INVALID_ARGS: -10;
export const ERR_INVALID_TARGET: -7;
export const ERR_NAME_EXISTS: -3;
export const ERR_NOT_ENOUGH_ENERGY: -6;
export const ERR_NOT_ENOUGH_EXTENSIONS: -6;
export const ERR_NOT_ENOUGH_RESOURCES: -6;
export const ERR_NOT_FOUND: -5;
export const ERR_NOT_IN_RANGE: -9;
export const ERR_NOT_OWNER: -1;
export const ERR_NO_BODYPART: -12;
export const ERR_NO_PATH: -2;
export const ERR_TIRED: -11;
declare const Flag_base: typeof import("./game").RoomObject;
export class Flag extends Flag_base {
    get my(): boolean;
}
export const HEAL: any;
export const HEAL_POWER: 12;
export const LEFT: 7;
export const MOVE: any;
export const OBSTACLE_OBJECT_TYPES: any;
export const tower: any;
export const constructedWall: any;
export const OK: 0;
export const RANGED_ATTACK: any;
export const RANGED_ATTACK_DISTANCE_RATE: any[];
export const RANGED_ATTACK_POWER: 10;
export const RANGED_HEAL_POWER: 4;
export const RIGHT: 3;
export const ROAD_WEAROUT: 1;
export class RoomObject {
    constructor(id: any);
    get exists(): boolean;
    get x(): any;
    get y(): any;
    findPathTo(pos: any, opts: any): any;
    toJSON(): {
        id: any;
        x: any;
        y: any;
    };
}
declare const Spawn_base: typeof import("./game").RoomObject;
export class Spawn extends Spawn_base {
    get hits(): any;
    get my(): boolean;
    spawnCreep(body: any): import("./game").Creep;
}
declare const StructureTower_base: typeof import("./game").RoomObject;
export class StructureTower extends StructureTower_base {
    get hits(): any;
    get hitsMax(): any;
    get my(): boolean;
    get store(): {
        energy: any;
        getCapacity(): any;
    };
    attack(target: any): any;
    heal(target: any): any;
}
declare const StructureWall_base: typeof import("./game").RoomObject;
export class StructureWall extends StructureWall_base {
    get hits(): any;
    get hitsMax(): any;
}
export const TERRAIN_MASK_SWAMP: 2;
export const TERRAIN_MASK_WALL: 1;
export const TOP: 1;
export const TOP_LEFT: 8;
export const TOP_RIGHT: 2;
export const TOUGH: any;
export const TOWER_CAPACITY: 1000;
export const TOWER_ENERGY_COST: 10;
export const TOWER_FALLOFF: 0.75;
export const TOWER_FALLOFF_RANGE: 20;
export const TOWER_HITS: 3000;
export const TOWER_OPTIMAL_RANGE: 5;
export const TOWER_POWER_ATTACK: 600;
export const TOWER_POWER_HEAL: 400;
export const TOWER_POWER_REPAIR: 800;
export const TOWER_RANGE: 50;
declare class RoomObject {
    constructor(id: any);
    get exists(): boolean;
    get x(): any;
    get y(): any;
    findPathTo(pos: any, opts: any): any;
    toJSON(): {
        id: any;
        x: any;
        y: any;
    };
}
declare class CostMatrix {
    static deserialize(data: any): any;
    _bits: Uint8Array;
    set(xx: any, yy: any, val: any): void;
    get(xx: any, yy: any): number;
    clone(): import("./game").CostMatrix;
    serialize(): any;
}
declare const Creep_base_1: typeof import("./game").RoomObject;
declare class Creep extends Creep_base_1 {
    get hits(): any;
    get hitsMax(): any;
    get my(): boolean;
    get body(): any;
    move(direction: any): any;
    moveTo(x: any, y: any, opts: any): any;
    rangedAttack(target: any): any;
    rangedMassAttack(): any;
    attack(target: any): any;
    heal(target: any): any;
    rangedHeal(target: any): any;
    pull(target: any): any;
}
export {};
// }
